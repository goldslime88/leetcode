#include <iostream>#include <string>#include <unordered_map>using namespace std;class Solution {public:    bool isAnagram(string s, string t)     {        if ( s.length() != t.length() )        {        	return false;        }        unordered_map< char, int > char_to_num;        for ( int i = 0; i < s.length(); ++i )        {        	unordered_map< char, int >::iterator it = char_to_num.find(s[i]);            if( it == char_to_num.end() )            {                char_to_num[s[i]] = 1;            }             else            {                ++ char_to_num[s[i]];            }        }        for (  int i = 0; i < t.length(); ++i )        {            unordered_map< char, int >::iterator it = char_to_num.find(t[i]);            if ( it == char_to_num.end() )            {                return false;            }            else            {                if(char_to_num[t[i]] == 1)                {                    char_to_num.erase(it);                }                else                {                    -- char_to_num[t[i]];                }            }        }        return true;       }};int main(int argc, char const *argv[]){    Solution *s = new Solution();    string a = "anagram";    string b = "nagaram";    cout<< (int)s->isAnagram( a, b )<<endl;    return 0;}